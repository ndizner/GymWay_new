<?php
/*
 * Generated by CRUDigniter v3.2
 * www.crudigniter.com
 */

class Payments extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Payments_datum_model');
        $this->data = $this->generales->imports_generales();
        $this->data['active'] = 'Pagos';
        $this->lang->load('clientes');
        $this->load->library('form_validation');
        $this->load->model('Discounts_datum_model');



        if($this->ion_auth->in_group(0)){
          $this->session->set_flashdata('error', 'No tiene permisos para realizar esta accion');
          redirect('/');
        }
    }

    /*
     * Listing of payments_data
     */
    function index()
    {


      $this->form_validation->set_rules('payment_date','Fecha','required');
      if($this->form_validation->run())
          {

            $this->data['date'] = $this->input->post('payment_date');
            $dates = explode(' - ', $this->input->post('payment_date'));



        //  $this->data['products_sales'] = $this->Products_sale_model->get_all_products_sales('DATE(products_sales_date) BETWEEN "'. $dates[0]. '" and "'. $dates[1].'"');

         $this->data['payments_data'] = $this->Payments_datum_model->get_all_payments_data(array('DATE(payment_date) >='=>date($this->config->item('query_date'), strtotime($dates[0])),'DATE(payment_date) <='=>date($this->config->item('query_date'), strtotime($dates[1])), 'payment_status'=>$this->config->item('Activo')));
          }else{
            $this->data['payments_data'] = $this->Payments_datum_model->get_all_payments_data(array('DATE(payment_date)'=>date($this->config->item('query_date')),'payment_status'=>$this->config->item('Activo')));
          }

        $this->data['_view'] = 'payments_datum/index';
        $this->load->view('layouts/main',$this->data);
    }

    /*
     * Adding a new payments_datum
     */
    function add()
    {

            $params = array(
      				'payment_customer_id' => $this->input->post('payment_customer_id'),
      				'payment_plan_id' => $this->input->post('payment_plan_id'),
      				'payment_discuount_id' => $this->input->post('payment_discuount_id'),
      				'payment_user_id' => $this->data['sesion']->id,
              'payment_date' => date($this->config->item('date_format')),
      				'payment_amount' => $this->input->post('payment_amount'),
      				'payment_status' => $this->config->item('Activo'),
            );

      $payments_datum_id = $this->Payments_datum_model->add_payments_datum($params);
      $this->load->model('Customers_data_model');
      $this->Customers_data_model->UpdateDueDate($this->input->post('payment_customer_id'));

    }

    function add_unique()
    {
      $this->load->model('Plans_datum_model');
      $monto = $this->Plans_datum_model->get_plans_datum($this->input->post('payment_plan_id'));

            $params = array(
      				'payment_customer_id' => $this->input->post('payment_customer_id'),
      				'payment_plan_id' => $this->input->post('payment_plan_id'),
      				'payment_user_id' => $this->data['sesion']->id,
              'payment_date' => date($this->config->item('date_format_pagos')),
      				'payment_amount' =>  $monto['plan_cost'],
      				'payment_status' => $this->config->item('Activo'),
            );

      $payments_datum_id = $this->Payments_datum_model->add_payments_datum($params);

    }

function test(){
  $this->load->model('Customers_data_model');
  echo ($this->Customers_data_model->test());
}

    /*
     * Editing a payments_datum
     */
    function edit($payment_id)
    {
        // check if the payments_datum exists before trying to edit it
        $data['payments_datum'] = $this->Payments_datum_model->get_payments_datum($payment_id);

        if(isset($data['payments_datum']['payment_id']))
        {
            $this->load->library('form_validation');

			$this->form_validation->set_rules('payment_customer_id','Payment Customer Id','required');
			$this->form_validation->set_rules('payment_plan_id','Payment Plan Id','required');
			$this->form_validation->set_rules('payment_discuount_id','Payment Discuount Id','required');
			$this->form_validation->set_rules('payment_user_id','Payment User Id','required');

			if($this->form_validation->run())
            {
                $params = array(
					'payment_customer_id' => $this->input->post('payment_customer_id'),
					'payment_plan_id' => $this->input->post('payment_plan_id'),
					'payment_discuount_id' => $this->input->post('payment_discuount_id'),
					'payment_user_id' => $this->input->post('payment_user_id'),
					'payment_amount' => $this->input->post('payment_amount'),
					'payment_status' => $this->input->post('payment_status'),
                );

                $this->Payments_datum_model->update_payments_datum($payment_id,$params);
                redirect('payments_datum/index');
            }
            else
            {
				$this->load->model('Customers_datum_model');
				$data['all_customers_data'] = $this->Customers_datum_model->get_all_customers_data();

				$this->load->model('Plans_datum_model');
				$data['all_plans_data'] = $this->Plans_datum_model->get_all_plans_data();

				$this->load->model('Discounts_datum_model');
				$data['all_discounts_data'] = $this->Discounts_datum_model->get_all_discounts_data();

                $data['_view'] = 'payments_datum/edit';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The payments_datum you are trying to edit does not exist.');
    }

    /*
     * Deleting payments_datum
     */
    function remove($payment_id)
    {
        $payments_datum = $this->Payments_datum_model->get_payments_datum($payment_id);

        // check if the payments_datum exists before trying to delete it
        if(isset($payments_datum['payment_id']))
        {
            $this->Payments_datum_model->delete_payments_datum($payment_id);
            redirect('payments_datum/index');
        }
        else
            show_error('The payments_datum you are trying to delete does not exist.');
    }

}
