<?php
/*
 * Generated by CRUDigniter v3.2
 * www.crudigniter.com
 */

class Customers_data_model extends CI_Model
{
    function __construct()
    {
        parent::__construct();
    }



function test(){

  return $this->db->get_where('plans_data',array('plan_id'=>$this->get_customers_data(1)['customer_id_plan']))->row()->plan_credits;
}

function Count_Clients($params = null){

  if(isset($params) && !empty($params))
  {
      $this->db->where($params);
  }
  $this->db->from('customers_data');
  return $this->db->count_all_results();

}

/*
 * Actualizo los creditos del cliente cada vez que realiza un ingreso
 */
function UpdateCredits($customer_id)
{
  $this->db->set('customer_remaining_credits', 'customer_remaining_credits-1', false);
  $this->db->where('customer_id', $customer_id);
  return $this->db->update('customers_data');
}

function UpdateDueDate($customer_id)
{

  $this->db->set('customer_due_date', strtotime("+1 month", $this->db->get_where('customers_data',array('customer_id'=>$customer_id))->row()->customer_due_date));
  $this->db->set('customer_remaining_credits', $this->db->get_where('plans_data',array('plan_id'=>$this->get_customers_data(1)['customer_id_plan']))->row()->plan_credits);
  $this->db->where('customer_id', $customer_id);
  return $this->db->update('customers_data');
}

function GetCredits($customer_id)
{

    return $this->db->get_where('customers_data',array('customer_id'=>$customer_id))->row()->customer_remaining_credits;
}

    /*
     * Get customers_data by customer_id
     */
    function get_customers_data($customer_id)
    {
      $this->db->distinct();
      $this->db->join('customer_entry', 'customers_data.customer_id = customer_entry.customer_entry_customer_id','left');
      $this->db->join('plans_data', 'customers_data.customer_id_plan = plans_data.plan_id');
        return $this->db->get_where('customers_data',array('customer_id'=>$customer_id))->row_array();
    }

    function get_customers_data_by_dni($customer_id)
    {
        return $this->db->get_where('customers_data',array('customer_dni'=>$customer_id))->row_array();
    }

    /*
     * Get all customers_data count
     */
    function get_all_customers_data_count()
    {

        $this->db->from('customers_data');
        return $this->db->count_all_results();
    }

    /*
     * Get all customers_data
     */
    function get_all_customers_data($params)
    {
      // $this->db->select_max('customer_entry_date AS last_entry');
      // $this->db->from('customer_entry');
      // $subquery = $this->db->_compile_select();
      //
      // $this->db->_reset_select();

        $this->db->distinct();
        $this->db->select('customer_id, customer_dni, customer_first_name, customer_last_name, plan_description, customer_due_date, customer_remaining_credits, customer_status, image');
    //    $this->db->select_max('customer_entry_date');
        $this->db->join('plans_data', 'customers_data.customer_id_plan = plans_data.plan_id');
        $this->db->order_by('customer_id', 'desc');
        //en caso de que reciba parametros
        if(isset($params) && !empty($params))
        {
            $this->db->where($params);
        }
        return $this->db->get('customers_data')->result_array();
    }

    /*
     * function to add new customers_data
     */
    function add_customers_data($params)
    {
        $this->db->insert('customers_data',$params);
        return $this->db->insert_id();
    }

    /*
     * function to update customers_data
     */
    function update_customers_data($customer_id,$params)
    {
        $this->db->where('customer_id',$customer_id);
        return $this->db->update('customers_data',$params);
    }

    /*
     * function to delete customers_data
     */
    function delete_customers_data($customer_id)
    {
        return $this->db->delete('customers_data',array('customer_id'=>$customer_id));
    }
}
