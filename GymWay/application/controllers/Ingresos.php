<?php
/*
 * Generated by CRUDigniter v3.2
 * www.crudigniter.com
 */

class Ingresos extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Customer_entry_model');
        $this->load->model('Customers_data_model');
        $this->data = $this->generales->imports_generales();
        $this->data['active'] = 'ingresos';
        $this->lang->load('clientes');
        $this->load->library('form_validation');
 			 $this->load->model('Customers_data_model');
    }

    /*
     * Listing of customer_entry
     */
    function index()
    {
      echo date($this->config->item('date_format'));
        $this->data['customer_entry'] = $this->Customer_entry_model->get_all_customer_entry();
        $this->data['_view'] = 'customer_entry/index';
        $this->load->view('layouts/main',$this->data);
    }
    function test()
    {
        echo $this->Customers_data_model->GetCredits(1);
    }

    function CustomerLogin(){
      if(isset($_POST) && count($_POST) > 0){
      $customer_id = $this->Customers_data_model->get_customers_data_by_dni($this->input->post('customer_id'));
        if($customer_id){

                  $params = array(
                      'customer_entry_customer_id' => $customer_id['customer_id'],
                      'customer_entry_date' => date($this->config->item('date_format')),
                      'customer_entry_class' => $this->GetClase(),
                  );

                  $customer_entry_id = $this->Customer_entry_model->add_customer_entry($params);
                  if($this->Customers_data_model->UpdateCredits($customer_id['customer_id'])){
                    if($customer_id['image']!= false){
                      $img = $customer_id['image'];
                    }else{
                      $img = $this->config->item('default_image');
                    }
                    $return = array (
                      'response' => true,
                      'nombre' => $customer_id['customer_first_name'],
                      'creditos' => $customer_id['customer_remaining_credits'],
                      'vence' => date('d-m-y',$customer_id['customer_due_date']),
                      'image' => $img,
                    );
                      echo json_encode($return);
                  }
                  else{
                    echo "errosdsadasr";
                  }
        }else{
        echo json_encode(array('response' => false));
        }


          }else{
            $this->load->view('customer_entry/CustomerLogin');
          }

    }

 function GetClase(){
	$clase = date("i");
	$hora = date("H");
		if ($clase<=10){	//ese 10 define la tolerancia en minutos
			$clase=$hora;
				} else {
					$clase = $hora + 1;
				}
  return  $clase;
}
    /*
     * Adding a new customer_entry
     */
    function add()
    {
        if(isset($_POST) && count($_POST) > 0)
        {
            $params = array(
				'customer_entry_customer_id' => $this->input->post('customer_id'),
				'customer_entry_date' => date($this->config->item('date_format')),
				'customer_entry_class' => $this->GetClase(),
            );

            $customer_entry_id = $this->Customer_entry_model->add_customer_entry($params);
            if($this->Customers_data_model->UpdateCredits($this->input->post('customer_id'))){
                echo $this->Customers_data_model->GetCredits($this->input->post('customer_id'));
            }
            else{
              echo "errosdsadasr";
            }


        }
        else
        {

            $data['_view'] = 'customer_entry/add';
            $this->load->view('layouts/main',$data);
        }
    }



}
